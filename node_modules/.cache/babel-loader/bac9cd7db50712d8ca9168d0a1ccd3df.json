{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cccam\\\\OneDrive\\\\Documentos\\\\source\\\\vscode\\\\pragmata\\\\src\\\\pages\\\\automatrix.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport './am.css';\nimport '../bootstrap.min.css';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Amtr() {\n  _s();\n\n  var pic = [];\n\n  function httpGetAsync(theUrl, callback) {\n    var xmlHttp = new XMLHttpRequest();\n\n    xmlHttp.onreadystatechange = function () {\n      if (xmlHttp.readyState == 4 && xmlHttp.status == 200) callback(xmlHttp.responseText);\n    };\n\n    xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous \n\n    xmlHttp.send(null);\n  }\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const cnv = document.getElementById('mainc');\n  const ctx = cnv.getContext(\"2d\");\n  cnv.width = 150;\n  cnv.height = 200;\n  httpGetAsync(\"she2dec.txt\", cb1);\n\n  function cb1(_arg) {\n    // alert(_arg);\n    var p = _arg.splt(';');\n\n    for (let i = 0; i < p.length; i++) {\n      pic[i] = p.split(',');\n    }\n\n    const imageData = ctx.getImageData(0, 0, cnv.width, cnv.height);\n    const data = imageData.data;\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = pic[i][0]; // red\n\n      data[i + 1] = pic[i + 1][1]; // green\n\n      data[i + 2] = pic[i + 2][2]; // blue\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"kjh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"mainc\",\n      className: \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Amtr, \"OZwazanA59tbNDUkc8lMSmTHj9Q=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Amtr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Amtr\");","map":{"version":3,"names":["React","useTranslation","withTranslation","Trans","Amtr","pic","httpGetAsync","theUrl","callback","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","t","i18n","cnv","document","getElementById","ctx","getContext","width","height","cb1","_arg","p","splt","i","length","split","imageData","getImageData","data","putImageData"],"sources":["C:/Users/cccam/OneDrive/Documentos/source/vscode/pragmata/src/pages/automatrix.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport './am.css';\r\nimport '../bootstrap.min.css';\r\nimport '../App.css';\r\n\r\nexport default function Amtr() {\r\n\r\n    var pic = [];\r\n\r\n    function httpGetAsync(theUrl, callback)\r\n    {\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.onreadystatechange = function() { \r\n            if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\r\n                callback(xmlHttp.responseText);\r\n        }\r\n        xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous \r\n        xmlHttp.send(null);\r\n    }\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const cnv = document.getElementById('mainc');\r\n    const ctx = cnv.getContext(\"2d\");\r\n    cnv.width = 150;\r\n    cnv.height = 200;\r\n\r\n    httpGetAsync(\"she2dec.txt\", cb1); \r\n\r\n    function cb1(_arg) {\r\n        // alert(_arg);\r\n        var p = _arg.splt(';');\r\n\r\n        for (let i = 0; i < p.length; i++) {\r\n            pic[i] = p.split(',');\r\n        }\r\n\r\n        const imageData = ctx.getImageData(0, 0, cnv.width, cnv.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            data[i] = pic[i][0]; // red\r\n            data[i + 1] = pic[i + 1][1]; // green\r\n            data[i + 2] = pic[i + 2][2]; // blue\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n\r\n    }\r\n    \r\n       \r\nreturn (\r\n    \r\n    <><div>kjh</div>\r\n        <canvas id=\"mainc\" className='canvas' />\r\n    </>\r\n)\r\n\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAO,UAAP;AACA,OAAO,sBAAP;AACA,OAAO,YAAP;;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAE3B,IAAIC,GAAG,GAAG,EAAV;;EAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EACA;IACI,IAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;IACAD,OAAO,CAACE,kBAAR,GAA6B,YAAW;MACpC,IAAIF,OAAO,CAACG,UAAR,IAAsB,CAAtB,IAA2BH,OAAO,CAACI,MAAR,IAAkB,GAAjD,EACIL,QAAQ,CAACC,OAAO,CAACK,YAAT,CAAR;IACP,CAHD;;IAIAL,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoBR,MAApB,EAA4B,IAA5B,EANJ,CAMuC;;IACnCE,OAAO,CAACO,IAAR,CAAa,IAAb;EACH;;EAED,MAAM;IAAEC,CAAF;IAAKC;EAAL,IAAcjB,cAAc,EAAlC;EACA,MAAMkB,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;EACA,MAAMC,GAAG,GAAGH,GAAG,CAACI,UAAJ,CAAe,IAAf,CAAZ;EACAJ,GAAG,CAACK,KAAJ,GAAY,GAAZ;EACAL,GAAG,CAACM,MAAJ,GAAa,GAAb;EAEAnB,YAAY,CAAC,aAAD,EAAgBoB,GAAhB,CAAZ;;EAEA,SAASA,GAAT,CAAaC,IAAb,EAAmB;IACf;IACA,IAAIC,CAAC,GAAGD,IAAI,CAACE,IAAL,CAAU,GAAV,CAAR;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACG,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;MAC/BzB,GAAG,CAACyB,CAAD,CAAH,GAASF,CAAC,CAACI,KAAF,CAAQ,GAAR,CAAT;IACH;;IAED,MAAMC,SAAS,GAAGX,GAAG,CAACY,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBf,GAAG,CAACK,KAA3B,EAAkCL,GAAG,CAACM,MAAtC,CAAlB;IACA,MAAMU,IAAI,GAAGF,SAAS,CAACE,IAAvB;;IACA,KAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,IAAI,CAACJ,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;MACrCK,IAAI,CAACL,CAAD,CAAJ,GAAUzB,GAAG,CAACyB,CAAD,CAAH,CAAO,CAAP,CAAV,CADqC,CAChB;;MACrBK,IAAI,CAACL,CAAC,GAAG,CAAL,CAAJ,GAAczB,GAAG,CAACyB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,CAAd,CAFqC,CAER;;MAC7BK,IAAI,CAACL,CAAC,GAAG,CAAL,CAAJ,GAAczB,GAAG,CAACyB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,CAAd,CAHqC,CAGR;IAChC;;IACDR,GAAG,CAACc,YAAJ,CAAiBH,SAAjB,EAA4B,CAA5B,EAA+B,CAA/B;EAEH;;EAGL,oBAEI;IAAA,wBAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAF,eACI;MAAQ,EAAE,EAAC,OAAX;MAAmB,SAAS,EAAC;IAA7B;MAAA;MAAA;MAAA;IAAA,QADJ;EAAA,gBAFJ;AAOC;;GAlDuB7B,I;UAeAH,c;;;KAfAG,I"},"metadata":{},"sourceType":"module"}