{"ast":null,"code":"import _classPrivateFieldLooseKey from \"C:/Users/cccam/OneDrive/Documentos/source/vscode/pragmata/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\n\nvar _createPolygon = /*#__PURE__*/_classPrivateFieldLooseKey(\"createPolygon\");\n\nclass Pixel {\n  constructor(x, y, val) {\n    Object.defineProperty(this, _createPolygon, {\n      value: _createPolygon2\n    });\n    this.x = x;\n    this.y = y;\n    this.w = 30;\n    this.h = 30;\n    this.val = val;\n    this.mask = document.createElement(\"canvas\");\n    this.mask.width = width;\n    this.mask.height = height;\n    const maskCtx = this.mask.getContext(\"2d\");\n\n    this.img.onload = () => {\n      maskCtx.fillStyle = color;\n      maskCtx.rect(0, 0, this.width, this.height);\n      maskCtx.fill();\n      maskCtx.globalCompositeOperation = \"destination-atop\";\n      maskCtx.drawImage(this.img, 0, 0, this.width, this.height);\n    };\n  }\n\n  draw(ctx) {\n    ctx.drawImage(null, -this.w / 2, -this.h / 2, this.w, this.h);\n  }\n\n}\n\nfunction _createPolygon2() {\n  const points = [];\n  const rad = Math.hypot(this.width, this.height) / 2;\n  const alpha = Math.atan2(this.width, this.height);\n  points.push({\n    x: this.x - Math.sin(this.angle - alpha) * rad,\n    y: this.y - Math.cos(this.angle - alpha) * rad\n  });\n  points.push({\n    x: this.x - Math.sin(this.angle + alpha) * rad,\n    y: this.y - Math.cos(this.angle + alpha) * rad\n  });\n  points.push({\n    x: this.x - Math.sin(Math.PI + this.angle - alpha) * rad,\n    y: this.y - Math.cos(Math.PI + this.angle - alpha) * rad\n  });\n  points.push({\n    x: this.x - Math.sin(Math.PI + this.angle + alpha) * rad,\n    y: this.y - Math.cos(Math.PI + this.angle + alpha) * rad\n  });\n  return points;\n}","map":{"version":3,"names":["Pixel","constructor","x","y","val","w","h","mask","document","createElement","width","height","maskCtx","getContext","img","onload","fillStyle","color","rect","fill","globalCompositeOperation","drawImage","draw","ctx","points","rad","Math","hypot","alpha","atan2","push","sin","angle","cos","PI"],"sources":["C:/Users/cccam/OneDrive/Documentos/source/vscode/pragmata/src/pages/pixel.js"],"sourcesContent":["class Pixel {\r\n    constructor(x, y, val) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = 30;\r\n        this.h = 30;\r\n        this.val = val;\r\n\r\n        this.mask=document.createElement(\"canvas\");\r\n        this.mask.width=width;\r\n        this.mask.height=height;\r\n\r\n        const maskCtx=this.mask.getContext(\"2d\");\r\n        this.img.onload=()=>{\r\n            maskCtx.fillStyle=color;\r\n            maskCtx.rect(0,0,this.width,this.height);\r\n            maskCtx.fill();\r\n\r\n            maskCtx.globalCompositeOperation=\"destination-atop\";\r\n            maskCtx.drawImage(this.img,0,0,this.width,this.height);\r\n        }\r\n    }\r\n\r\n    #createPolygon(){\r\n        const points=[];\r\n        const rad=Math.hypot(this.width,this.height)/2;\r\n        const alpha=Math.atan2(this.width,this.height);\r\n        points.push({\r\n            x:this.x-Math.sin(this.angle-alpha)*rad,\r\n            y:this.y-Math.cos(this.angle-alpha)*rad\r\n        });\r\n        points.push({\r\n            x:this.x-Math.sin(this.angle+alpha)*rad,\r\n            y:this.y-Math.cos(this.angle+alpha)*rad\r\n        });\r\n        points.push({\r\n            x:this.x-Math.sin(Math.PI+this.angle-alpha)*rad,\r\n            y:this.y-Math.cos(Math.PI+this.angle-alpha)*rad\r\n        });\r\n        points.push({\r\n            x:this.x-Math.sin(Math.PI+this.angle+alpha)*rad,\r\n            y:this.y-Math.cos(Math.PI+this.angle+alpha)*rad\r\n        });\r\n        return points;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.drawImage(null,\r\n            -this.w/2,\r\n            -this.h/2,\r\n            this.w,\r\n            this.h);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}